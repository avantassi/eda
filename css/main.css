@charset "UTF-8";
* {
  box-sizing: border-box; }

html {
  font-size: 16px; }

html, body {
  width: 100%;
  height: 100%; }

body {
  margin: 0;
  font-size: 16px;
  font-family: 'Cera-Reg', sans-serif;
  color: #000000; }

h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  font-weight: normal; }

ul {
  padding: 0;
  margin: 0; }

ul li {
  list-style: none; }

p {
  padding: 0;
  margin: 0; }

.container {
  margin: 0 auto;
  max-width: 1160px;
  width: 100%;
  display: flex;
  flex-direction: column; }
  .container--row {
    flex-direction: row; }
  .container:after {
    content: "";
    display: table; }
  .container:after {
    clear: both; }

.wrapper {
  position: relative;
  overflow: hidden;
  width: 100%;
  min-height: 100%; }

.maincontent {
  height: 100%;
  min-height: 650px; }

.first-title {
  font-size: 24px;
  font-weight: bold;
  color: #ffffff; }

@font-face {
  font-family: 'Cera-Reg';
  src: url("../fonts/CeraPro-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/CeraPro-Regular.woff") format("woff"), url("../fonts/CeraPro-Regular.ttf") format("truetype"), url("../fonts/CeraPro-Regular.svg#CeraPro-Regular") format("svg");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: 'Cera-Bold';
  src: url("../fonts/CeraPro-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/CeraPro-Bold.woff") format("woff"), url("../fonts/CeraPro-Bold.ttf") format("truetype"), url("../fonts/CeraPro-Bold.svg#CeraPro-Bold") format("svg");
  font-weight: normal;
  font-style: normal; }
.hero {
  background: url(../img/hero-bg.png) center center no-repeat;
  background-size: cover; }

.acco {
  width: 100%;
  max-width: 600px;
  min-height: 0;
  display: block;
  position: relative;
  margin: 0 auto;
  padding: 0;
  background-color: #fefffa;
  overflow: hidden; }

/* заголовки панелей аккордеона */
.acco__title {
  font-size: 16px;
  font-weight: 300;
  letter-spacing: 1px;
  display: block;
  margin: 0;
  padding: 10px 25px;
  cursor: pointer;
  color: #f4f4f4;
  background: #2d8bbb;
  border-top: 1px solid #3face4;
  border-bottom: 1px solid #2479a5;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

/* Формируем блоки с содерханием */
.msg {
  position: relative;
  overflow: hidden;
  max-height: 800px;
  opacity: 1;
  transform: translate(0, 0); }

/* Позаботимся о небольших экранах */
@media (max-width: 550px) {
  .accordion {
    box-sizing: border-box;
    transform: translate(0, 0);
    max-width: 100%;
    min-height: 100%;
    margin: 0;
    left: 0; } }
/* Формируем неупорядоченный список */
.acco ul {
  list-style: none;
  perspective: 900;
  padding: 0;
  margin: 0; }

/* Определяем и формируем отдельный элемент списка
 * в который поместим скрытый флажек,
 * заголовок панелей и блок с содержанием
*/
.acco ul li {
  position: relative;
  padding: 0;
  margin: 0; }

/* устанавливаем время ожидания перед воспроизведением анимации
 * на основе нумерации в дереве элементов
*/
.acco ul li:nth-of-type(1) {
  animation-delay: 0.5s; }

.acco ul li:nth-of-type(2) {
  animation-delay: 0.75s; }

.acco ul li:nth-of-type(3) {
  animation-delay: 1s; }

.acco ul li:last-of-type {
  padding-bottom: 0; }

/* Сформируем  указатель переключения состояния аккордеона */
.acco ul li i {
  position: absolute;
  transform: translate(-6px, 0);
  margin-top: 16px;
  /* расположим указатель на панели заголовка справа */
  right: 25px; }

/* "Рисуем " сам указатель */
.acco ul li i:before, .acco ul li i:after {
  content: "";
  position: absolute;
  background-color: #eee;
  width: 3px;
  height: 9px; }

/* Добавляем элемент трансформации указателя при переключении */
.acco ul li i:before {
  transform: translate(-2px, 0) rotate(45deg); }

.acco ul li i:after {
  transform: translate(2px, 0) rotate(-45deg); }

/* Делаем чекбокс скрытым*/
.acco ul li input[type=checkbox] {
  position: absolute;
  cursor: pointer;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  opacity: 0; }

/* Когда у флажка установлен checked
 * блок с содержанием скрыт
*/
.acco ul li input[type=checkbox]:checked ~ div.msg {
  margin-top: 0;
  max-height: 0;
  opacity: 0;
  transform: translate(0, 50%); }

/* А указатель показывает вниз */
.acco ul li input[type=checkbox]:checked ~ i:before {
  transform: translate(2px, 0) rotate(45deg); }

.acco ul li input[type=checkbox]:checked ~ i:after {
  transform: translate(-2px, 0) rotate(-45deg); }

/*  Устанавливаем эффект перехода
 * между двумя состояниями указателя
*/
div.msg, ul li i:before, ul li i:after {
  transition: all 0.5s ease-in-out; }

/*# sourceMappingURL=main.css.map */
